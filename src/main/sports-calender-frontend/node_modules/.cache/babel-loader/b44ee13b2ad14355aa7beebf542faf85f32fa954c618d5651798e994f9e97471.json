{"ast":null,"code":"var _jsxFileName = \"/Users/christiantumandao/Desktop/sports-calendar/src/main/sports-calender-frontend/src/components/mainBody.jsx\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Display from './display';\nimport Tabs from './tabs';\nimport SearchBar from './searchBar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MainBody extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tabsToDisplay: [{\n        id: \"1\",\n        description: \"Your games\"\n      }, {\n        id: \"2\",\n        description: \"Find Games\"\n      }, {\n        id: \"3\",\n        description: \"Find past games\"\n      }, {\n        id: \"4\",\n        description: \"Profile Info\"\n      }, {\n        id: \"5\",\n        description: \"Info\"\n      }],\n      defaultTabs: [{\n        id: \"1\",\n        description: \"Your games\"\n      }, {\n        id: \"2\",\n        description: \"Find games\"\n      }, {\n        id: \"3\",\n        description: \"Find past games\"\n      }, {\n        id: \"4\",\n        description: \"Profile Info\"\n      }, {\n        id: \"5\",\n        description: \"Info\"\n      }],\n      findGamesTabs: [{\n        id: \"back\",\n        description: \"Back\"\n      }, {\n        id: \"sbt-1\",\n        description: \"Search by League\"\n      }, {\n        id: \"sbt-2\",\n        description: \"Search by Teams\"\n      }],\n      leagueTabs: [{\n        id: \"back\",\n        description: \"Back\"\n      }, {\n        id: \"premier\",\n        description: \"Premier League\"\n      }, {\n        id: \"champions\",\n        description: \"Champions League\"\n      }, {\n        id: \"bundesliga\",\n        description: \"Bundesliga\"\n      }, {\n        id: \"serie-a\",\n        description: \"Serie A\"\n      }, {\n        id: \"la-liga\",\n        description: \"La Liga\"\n      }],\n      scheduledGamesTabs: [{\n        id: \"back\",\n        description: \"Back\"\n      }, {\n        id: \"6\",\n        description: \"Game 1\"\n      }, {\n        id: \"7\",\n        description: \"Game 2\"\n      }, {\n        id: \"8\",\n        description: \"Game 3\"\n      }, {\n        id: \"9\",\n        description: \"Game 4\"\n      }],\n      //header data for right display\n      displayHeaderData: {\n        name: \"Event Manager\",\n        region: \"\",\n        season: \"\",\n        subHeader: \"\"\n      },\n      defaultHeaderData: {\n        name: \"Event Manager\",\n        region: \"\",\n        season: \"\",\n        subHeader: \"\"\n      },\n      //tabs displayed on the right | is a list of objects w values:\n      //    {home, homeImg, away, awayImg, stadium, location, date, time}\n      rightDisplayTabs: [],\n      // what is displayed\n      defaultRightDisplayTabs: [],\n      getter: \"\",\n      findFutureGames: true,\n      // display the \"add game\" button AND wanting to find upcoming games\n      displayDeleteButton: false,\n      // display the \"delete game\" button\n\n      displayLoginStatus: true,\n      // display user is not logged in\n      displayLogin: false,\n      // display login GUI\n      displayRegistration: false,\n      // fidplsy registration GUI\n\n      isLoggedIn: false,\n      userData: {\n        firstName: \"\",\n        lastName: \"\",\n        id: \"\"\n      },\n      userGames: []\n    };\n    this.handleTabClick = (id, optData) => {\n      var newDisplay = \"\";\n      var newTabs = this.state.tabsToDisplay;\n      if (id === \"back\") {\n        newTabs = this.state.defaultTabs;\n        if (this.state.isLoggedIn === true) {\n          this.displayScheduledGames();\n        } else {\n          this.displayUserNotLoggedIn();\n        }\n      } else if (id === \"1\") {\n        //your scheduled games\n        this.setState({\n          displayDeleteButton: true\n        });\n        this.setState({\n          findFutureGames: false\n        });\n        this.setState({\n          rightDisplayTabs: this.state.userGames\n        });\n      } else if (id === \"2\") {\n        newDisplay = \"TWO\";\n        this.setState({\n          findFutureGames: false\n        });\n        this.setState({\n          displayDeleteButton: false\n        });\n        newTabs = this.state.findGamesTabs;\n      } //find future games\n      else if (id === \"3\") {\n        //find past games\n        this.setState({\n          displayDeleteButton: false\n        });\n        this.setState({\n          findFutureGames: false\n        });\n        newTabs = this.state.findGamesTabs;\n      } else if (id === \"sbt-1\") {\n        this.setState({\n          displayDeleteButton: false\n        });\n        this.setState({\n          findFutureGames: false\n        });\n        this.setState({\n          getter: \"by league\"\n        });\n        newTabs = this.state.leagueTabs;\n      } else if (id === \"sbt-2\") {\n        this.setState({\n          displayDeleteButton: false\n        });\n        this.setState({\n          findFutureGames: false\n        });\n        this.setState({\n          getter: \"by teams\"\n        });\n        newTabs = this.state.leagueTabs;\n      } else if (id === \"premier\" || id === \"champions\" || id === \"bundesliga\" || id === \"serie-a\" || id === \"la-liga\") {\n        this.setState({\n          displayDeleteButton: false\n        });\n        this.setState({\n          findFutureGames: false\n        });\n        this.getLeagueInfo(id);\n      } else if (typeof id === 'number') {\n        this.setState({\n          displayDeleteButton: false\n        });\n        this.setState({\n          findFutureGames: false\n        });\n        this.getFixturesByTeam(id, optData);\n      } //if clicked on a team, get fixtures for that team\n\n      this.setState({\n        display: newDisplay,\n        tabsToDisplay: newTabs\n      });\n    };\n    this.displayScheduledGames = () => {\n      if (this.state.isLoggedIn === true) {\n        this.setState({\n          displayLoginStatus: false,\n          displayLogin: false,\n          displayRegistration: false,\n          rightDisplayTabs: this.state.userGames,\n          displayHeaderData: {\n            name: \"Welcome \" + this.state.userData.firstName,\n            subHeader: \"Your games\"\n          },\n          displayDeleteButton: true,\n          displayAddButton: false\n        }, console.log(this.state.displayAddbutton));\n      }\n    };\n    this.displayUserNotLoggedIn = () => {\n      if (this.state.isLoggedIn === false) {\n        this.setState({\n          displayLoginStatus: true,\n          displayLogin: false,\n          displayRegistration: false,\n          rightDisplayTabs: this.state.defaultRightDisplayTabs,\n          displayHeaderData: {\n            name: \"Events Manager\"\n          }\n        });\n      }\n    };\n    //getScheduledGames = () => {\n    this.loadInScheduledGames = () => {\n      let axios_uri = \"http://localhost:8080/api/users/events/\" + String(this.state.userData.id);\n      axios({\n        method: 'get',\n        url: axios_uri\n      }).then(result => {\n        let events = [];\n        // mapping data in each event in json to \"events\" array to be displayed in eventTab\n        result.data.forEach(res => {\n          events.push({\n            id: res.id,\n            home: String(res.home),\n            homeImg: String(res.homeImg),\n            away: String(res.away),\n            awayImg: String(res.awayImg),\n            stadium: String(res.stadium),\n            location: String(res.location),\n            date: String(res.date),\n            time: String(res.time)\n          });\n          //events.push({id:String(res.eventName), description: String(res.eventDescription)});\n        });\n\n        this.setState({\n          userGames: events\n        }, () => this.displayScheduledGames());\n      }).catch(error => console.error(\"err:\", error));\n    };\n    //api call to find available games for each region\n    this.getLeagueInfo = leagueId => {\n      if (leagueId === \"premier\") {\n        leagueId = 39;\n      } else if (leagueId === \"champions\") {\n        leagueId = 2;\n      } else if (leagueId === \"bundesliga\") {\n        leagueId = 78;\n      } else if (leagueId === \"serie-a\") {\n        leagueId = 135;\n      } else if (leagueId === \"la-liga\") {\n        leagueId = 140;\n      }\n\n      //API call to get info on league clicked. will change the header on display\n      const options = {\n        method: 'GET',\n        url: 'https://api-football-v1.p.rapidapi.com/v3/leagues',\n        params: {\n          id: leagueId\n        },\n        headers: {\n          'X-RapidAPI-Key': 'c3997e6e90mshc57e13968b48304p10dd78jsnd81c29d9c57a',\n          'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n        }\n      };\n      let name;\n      let region;\n      let season;\n      axios.request(options).then(response => {\n        let res = response.data.response[0];\n        name = res.league.name;\n        if (name === \"UEFA Champions League\") name = \"Champions League\";\n        region = res.country.name;\n        season = res.seasons.filter(season => season.current === true);\n        season = season[0];\n        season = season.start + ' to ' + season.end;\n        this.setState({\n          displayHeaderData: {\n            name: name,\n            region: region,\n            season: season\n          }\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n      if (this.state.getter === \"by league\") this.getFixturesByLeague(leagueId);else if (this.state.getter === \"by teams\") {\n        this.getTeamsByLeague(leagueId);\n        console.log(\"getting teams for league id \", 2);\n      }\n    };\n    this.getTeamsByLeague = leagueId => {\n      //translating leagueIDs for different api version usage\n      if (leagueId === 39) {\n        leagueId = 2;\n      } else if (leagueId === 2) {\n        leagueId = 31;\n      } else if (leagueId === 78) {\n        leagueId = 8;\n      } else if (leagueId === 135) {\n        leagueId = 6;\n      } else if (leagueId === 140) {\n        leagueId = 30;\n      }\n      var teamsInLeague = [];\n      var axios_uri = \"https://api-football-v1.p.rapidapi.com/v2/teams/league/\" + leagueId;\n      const options = {\n        method: 'GET',\n        url: axios_uri,\n        headers: {\n          'X-RapidAPI-Key': 'c3997e6e90mshc57e13968b48304p10dd78jsnd81c29d9c57a',\n          'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n        }\n      };\n      axios.request(options).then(response => {\n        let res = response.data.api.teams;\n        teamsInLeague.push({\n          id: \"back\",\n          description: \"Back\"\n        });\n        res.map(team => {\n          let obj = {};\n          obj.id = team.team_id;\n          obj.description = team.name;\n          obj.logo = team.logo;\n          obj.code = '(' + team.code + ')';\n          teamsInLeague.push(obj);\n        });\n        // id description\n        this.setState({\n          tabsToDisplay: teamsInLeague\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n    this.getFixturesByTeam = (teamId, teamName) => {\n      this.setState({\n        findFutureGames: true,\n        displayLoginStatus: false,\n        displayLogin: false,\n        displayRegistration: false\n      });\n      var api_params;\n      if (this.state.findFutureGames === true) api_params = {\n        team: teamId,\n        season: '2022',\n        next: '50'\n      };else api_params = {\n        team: teamId,\n        season: '2022',\n        last: '50'\n      };\n      const options = {\n        method: 'GET',\n        url: 'https://api-football-v1.p.rapidapi.com/v3/fixtures',\n        params: api_params,\n        headers: {\n          'X-RapidAPI-Key': 'c3997e6e90mshc57e13968b48304p10dd78jsnd81c29d9c57a',\n          'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n        }\n      };\n      axios.request(options).then(response => {\n        var newFixture = [];\n        response.data.response.map(event => {\n          let f = {\n            id: event.fixture.id,\n            home: event.teams.home.name,\n            away: event.teams.away.name,\n            date: event.fixture.date.slice(0, 10),\n            time: event.fixture.date.slice(11, 16),\n            timezone: event.fixture.timezone,\n            location: event.fixture.venue.city,\n            stadium: event.fixture.venue.name,\n            homeImg: event.teams.home.logo,\n            awayImg: event.teams.away.logo,\n            homeScore: event.goals.home,\n            awayScore: event.goals.away\n          };\n          newFixture.push(f);\n        });\n        this.setState({\n          rightDisplayTabs: newFixture,\n          displayHeaderData: {\n            name: teamName,\n            region: \"\",\n            season: \"\"\n          }\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n    this.getFixturesByLeague = leagueId => {\n      this.setState({\n        findFutureGames: true,\n        displayLoginStatus: false,\n        displayLogin: false,\n        displayRegistration: false\n      });\n      var api_params;\n      if (this.state.findFutureGames === true) api_params = {\n        league: leagueId,\n        season: '2022',\n        next: '50'\n      };else api_params = {\n        league: leagueId,\n        season: '2022',\n        last: '50'\n      };\n      const options = {\n        method: 'GET',\n        url: 'https://api-football-v1.p.rapidapi.com/v3/fixtures',\n        params: api_params,\n        headers: {\n          'X-RapidAPI-Key': 'c3997e6e90mshc57e13968b48304p10dd78jsnd81c29d9c57a',\n          'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n        }\n      };\n      axios.request(options).then(response => {\n        var newFixture = [];\n        response.data.response.map(event => {\n          let f = {\n            id: event.fixture.id,\n            home: event.teams.home.name,\n            away: event.teams.away.name,\n            date: event.fixture.date.slice(0, 10),\n            time: event.fixture.date.slice(11, 16),\n            timezone: event.fixture.timezone,\n            location: event.fixture.venue.city,\n            stadium: event.fixture.venue.name,\n            homeImg: event.teams.home.logo,\n            awayImg: event.teams.away.logo,\n            homeScore: event.goals.home,\n            awayScore: event.goals.away\n          };\n          newFixture.push(f);\n        });\n        this.setState({\n          rightDisplayTabs: newFixture\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n    this.addGame = event => {\n      if (this.state.isLoggedIn === false) {\n        this.displayUserNotLoggedIn();\n      } else {\n        /*id\n        xhome \n        xhomeImg\n        xaway\n        xawayImg\n        xdate\n        xtime\n        timezone\n        xlocation\n        xstadium */\n        let uri = \"http://localhost:8080/api/events/new-event\";\n        axios.post(uri, {\n          id: event.id,\n          eventName: event.home + \" vs \" + event.away,\n          eventDescription: event.time,\n          date: event.date,\n          time: event.time,\n          location: event.location,\n          stadium: event.stadium,\n          home: event.home,\n          homeImg: event.homeImg,\n          away: event.away,\n          awayImg: event.awayImg,\n          uid: this.state.userData.id\n        }).then(response => {\n          let newUserGames = [...this.state.userGames];\n          newUserGames.push(event);\n          console.log(\"event\", event.id, \"added\");\n        }).catch(error => console.log(\"error\", error));\n      }\n    };\n    this.deleteGame = id => {\n      console.log(\"deleting event \", id);\n      let axios_uri = \"http://localhost:8080/api/events/\" + String(id);\n      axios.delete(axios_uri).then(response => {\n        console.log(\"event deleted\");\n        this.getScheduledGames();\n      }).catch(error => console.log(\"error\", error));\n    };\n    this.handleLoginRegistrationClick = buttonType => {\n      if (buttonType === \"login\") {\n        this.setState({\n          displayLogin: true,\n          displayLoginStatus: false,\n          displayHeaderData: {\n            name: \"Login\",\n            region: \"\",\n            season: \"\"\n          }\n        });\n      } else if (buttonType === \"registration\") {\n        this.setState({\n          displayLoginStatus: false,\n          displayRegistration: true,\n          displayHeaderData: {\n            name: \"Registration\",\n            region: \"\",\n            season: \"\"\n          }\n        });\n      } else if (buttonType === \"back\") {\n        this.setState({\n          displayLoginStatus: true,\n          displayRegistration: false,\n          displayLogin: false,\n          displayHeaderData: {\n            name: \"\",\n            region: \"\",\n            season: \"\"\n          }\n        });\n      }\n    };\n    this.handleRegistrationSubmit = userData => {\n      console.log(\"Registering....\");\n      console.log(\"Name: \", userData.firstName, userData.lastName);\n      console.log(\"username: \", userData.username);\n      console.log(\"password: \", userData.password);\n      axios.post(\"http://localhost:8080/api/users\", {\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        username: userData.username,\n        password: userData.password\n      }).then(result => {\n        console.log(\"User \", userData.username, \" generated\");\n      }).catch(error => console.error(\"err:\", error));\n    };\n    this.handleLoginSubmit = userData => {\n      console.log(\"logging in as\", userData.username, \"...\");\n\n      //getting all users and filtering JSON for right users\n      axios.get(\"http://localhost:8080/api/users/all-users\").then(response => {\n        let user = response.data.filter(u => u.username === userData.username && u.password === userData.password);\n        if (user.length === 0) {\n          console.log(\"log in failed\");\n          alert(\"login failed\");\n        } else {\n          user = user[0];\n          this.setState({\n            userData: {\n              firstName: user.firstName,\n              lastName: user.lastName,\n              username: user.username,\n              id: user.id\n            },\n            isLoggedIn: true\n          }, () => {\n            this.loadInScheduledGames();\n          });\n        }\n      }).catch(error => console.log(\"error: \", error));\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex-item-mainBody flex-item-mainBody-1 flex-container-tabs\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          tabsToDisplay: this.state.tabsToDisplay,\n          handleTabClick: this.handleTabClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex-item-mainBody flex-item-mainBody-2 flex-container-display\",\n        children: /*#__PURE__*/_jsxDEV(Display, {\n          displayHeaderData: this.state.displayHeaderData,\n          fixtures: this.state.rightDisplayTabs,\n          addGame: this.addGame,\n          deleteGame: this.deleteGame,\n          displayAddButton: this.state.findFutureGames //button for adding games\n          ,\n          displayDeleteButton: this.state.displayDeleteButton\n\n          //booleans for having to display login/register pages\n          ,\n          displayLoginStatus: this.state.displayLoginStatus,\n          displayLogin: this.state.displayLogin,\n          displayRegistration: this.state.displayRegistration\n\n          //button handler\n          ,\n          handleLoginRegistrationClick: this.handleLoginRegistrationClick\n\n          //login/register button handler\n          ,\n          handleRegistration: this.handleRegistrationSubmit,\n          handleLogin: this.handleLoginSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default MainBody;","map":{"version":3,"names":["React","Component","useEffect","useState","Display","Tabs","SearchBar","axios","jsxDEV","_jsxDEV","MainBody","constructor","arguments","state","tabsToDisplay","id","description","defaultTabs","findGamesTabs","leagueTabs","scheduledGamesTabs","displayHeaderData","name","region","season","subHeader","defaultHeaderData","rightDisplayTabs","defaultRightDisplayTabs","getter","findFutureGames","displayDeleteButton","displayLoginStatus","displayLogin","displayRegistration","isLoggedIn","userData","firstName","lastName","userGames","handleTabClick","optData","newDisplay","newTabs","displayScheduledGames","displayUserNotLoggedIn","setState","getLeagueInfo","getFixturesByTeam","display","displayAddButton","console","log","displayAddbutton","loadInScheduledGames","axios_uri","String","method","url","then","result","events","data","forEach","res","push","home","homeImg","away","awayImg","stadium","location","date","time","catch","error","leagueId","options","params","headers","request","response","league","country","seasons","filter","current","start","end","getFixturesByLeague","getTeamsByLeague","teamsInLeague","api","teams","map","team","obj","team_id","logo","code","teamId","teamName","api_params","next","last","newFixture","event","f","fixture","slice","timezone","venue","city","homeScore","goals","awayScore","addGame","uri","post","eventName","eventDescription","uid","newUserGames","deleteGame","delete","getScheduledGames","handleLoginRegistrationClick","buttonType","handleRegistrationSubmit","username","password","handleLoginSubmit","get","user","u","length","alert","render","Fragment","children","class","fileName","_jsxFileName","lineNumber","columnNumber","fixtures","handleRegistration","handleLogin"],"sources":["/Users/christiantumandao/Desktop/sports-calendar/src/main/sports-calender-frontend/src/components/mainBody.jsx"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport Display from './display';\nimport Tabs from './tabs';\nimport SearchBar from './searchBar';\n\nimport axios from 'axios';\n\nclass MainBody extends Component {\n    state = {  \n\n        tabsToDisplay: [\n            {id: \"1\", description: \"Your games\"},\n            {id: \"2\", description: \"Find Games\"},\n            {id: \"3\", description: \"Find past games\"},\n            {id: \"4\", description: \"Profile Info\"},\n            {id: \"5\", description: \"Info\"}\n            ],\n\n        defaultTabs: [\n            {id: \"1\", description: \"Your games\"},\n            {id: \"2\", description: \"Find games\"},\n            {id: \"3\", description: \"Find past games\"},\n            {id: \"4\", description: \"Profile Info\"},\n            {id: \"5\", description: \"Info\"}\n            ],\n\n        findGamesTabs: [\n            {id: \"back\", description: \"Back\"},\n            {id: \"sbt-1\", description: \"Search by League\"},\n            {id: \"sbt-2\", description: \"Search by Teams\"},\n        ],\n\n        leagueTabs: [\n            {id: \"back\", description: \"Back\"},\n            {id: \"premier\", description: \"Premier League\"},\n            {id: \"champions\", description: \"Champions League\"},\n            {id: \"bundesliga\", description: \"Bundesliga\"},\n            {id: \"serie-a\", description: \"Serie A\"},\n            {id: \"la-liga\", description: \"La Liga\"}\n        ],\n\n        scheduledGamesTabs: [\n            {id: \"back\", description: \"Back\"},\n            {id: \"6\", description: \"Game 1\"},\n            {id: \"7\", description: \"Game 2\"},\n            {id: \"8\", description: \"Game 3\"},\n            {id: \"9\", description: \"Game 4\"}\n            ],\n\n        //header data for right display\n        displayHeaderData: {name: \"Event Manager\", region: \"\", season: \"\", subHeader:\"\"},\n        defaultHeaderData: {name: \"Event Manager\", region: \"\", season: \"\", subHeader:\"\"},\n\n        //tabs displayed on the right | is a list of objects w values:\n        //    {home, homeImg, away, awayImg, stadium, location, date, time}\n       rightDisplayTabs: [], // what is displayed\n       defaultRightDisplayTabs: [],\n\n       getter: \"\",\n       findFutureGames: true, // display the \"add game\" button AND wanting to find upcoming games\n       displayDeleteButton: false, // display the \"delete game\" button\n\n       displayLoginStatus: true,    // display user is not logged in\n       displayLogin: false,             // display login GUI\n       displayRegistration: false,  // fidplsy registration GUI\n\n       isLoggedIn: false,\n       userData: {firstName: \"\", lastName: \"\", id: \"\"},\n       userGames: []\n    } \n    render() { \n        return (\n            <React.Fragment>\n\n                <div class=\"flex-item-mainBody flex-item-mainBody-1 flex-container-tabs\" >         \n                    <Tabs\n                        tabsToDisplay = { this.state.tabsToDisplay } \n                        handleTabClick = { this.handleTabClick }\n                     />\n                </div>\n\n                <div class=\"flex-item-mainBody flex-item-mainBody-2 flex-container-display\">\n                    <Display \n                        displayHeaderData={this.state.displayHeaderData}\n\n                        fixtures={this.state.rightDisplayTabs}\n                        addGame = {this.addGame}\n                        deleteGame = {this.deleteGame}\n                        displayAddButton= {this.state.findFutureGames} //button for adding games\n                        displayDeleteButton= { this.state.displayDeleteButton }\n\n                        //booleans for having to display login/register pages\n                        displayLoginStatus = {this.state.displayLoginStatus}\n                        displayLogin = {this.state.displayLogin}\n                        displayRegistration = {this.state.displayRegistration}\n\n                        //button handler\n                        handleLoginRegistrationClick = {this.handleLoginRegistrationClick}\n\n                        //login/register button handler\n                        handleRegistration = {this.handleRegistrationSubmit}\n                        handleLogin = {this.handleLoginSubmit}/>\n                </div>\n\n\n            </React.Fragment>\n\n\n        );\n    }\n\n    handleTabClick = (id, optData) => {\n\n        var newDisplay=\"\";\n        var newTabs = this.state.tabsToDisplay;\n        if (id ===\"back\") { \n          newTabs= this.state.defaultTabs;\n\n          if (this.state.isLoggedIn===true) {\n            this.displayScheduledGames(); \n          }\n          else {\n            this.displayUserNotLoggedIn();    \n          }\n        } \n        else if (id === \"1\") {  //your scheduled games\n          this.setState({displayDeleteButton: true}); \n          this.setState({findFutureGames: false}); \n          this.setState({rightDisplayTabs: this.state.userGames});\n        } \n        else if (id===\"2\") {\n          newDisplay=\"TWO\";   \n          this.setState({findFutureGames: false}); \n          this.setState({displayDeleteButton: false});\n          newTabs = this.state.findGamesTabs; \n        }  //find future games\n        else if (id===\"3\") { //find past games\n          this.setState({displayDeleteButton: false});\n          this.setState({findFutureGames: false}); \n          newTabs = this.state.findGamesTabs;} \n\n        else if (id===\"sbt-1\") { \n          this.setState({displayDeleteButton: false});\n          this.setState({findFutureGames: false}); \n          this.setState({getter: \"by league\"}); \n          newTabs = this.state.leagueTabs; \n        }\n        else if (id===\"sbt-2\") { \n          this.setState({displayDeleteButton: false});\n          this.setState({findFutureGames: false}); \n          this.setState({getter: \"by teams\"}); \n          newTabs = this.state.leagueTabs; \n        }\n\n        else if (id===\"premier\" || id===\"champions\" || id===\"bundesliga\" || id===\"serie-a\" || id===\"la-liga\") { \n          this.setState({displayDeleteButton: false});\n          this.setState({findFutureGames: false}); \n          this.getLeagueInfo(id); \n        }\n        else if ((typeof id)==='number') { \n          this.setState({displayDeleteButton: false});\n          this.setState({findFutureGames: false}); \n          this.getFixturesByTeam(id, optData) \n        } //if clicked on a team, get fixtures for that team\n\n\n        this.setState({\n            display: newDisplay,\n            tabsToDisplay: newTabs\n        }) \n    }\n\n    displayScheduledGames = () => {\n      if (this.state.isLoggedIn===true) {\n        this.setState({\n          displayLoginStatus: false, \n          displayLogin: false, \n          displayRegistration: false, \n          rightDisplayTabs: this.state.userGames, \n          displayHeaderData: { name: \"Welcome \"+this.state.userData.firstName, subHeader: \"Your games\"},\n          displayDeleteButton: true,\n          displayAddButton: false\n        }, console.log(this.state.displayAddbutton));\n      }\n    }\n\n    displayUserNotLoggedIn = () => {\n      if (this.state.isLoggedIn===false) {\n        this.setState({\n                displayLoginStatus: true, \n                displayLogin: false, \n                displayRegistration: false, \n                rightDisplayTabs: this.state.defaultRightDisplayTabs,\n                displayHeaderData: {name: \"Events Manager\"}\n              });\n      }\n    }\n\n\n    //getScheduledGames = () => {\n      loadInScheduledGames = () => {\n        let axios_uri = \"http://localhost:8080/api/users/events/\"+String(this.state.userData.id);\n        axios({\n        method: 'get',\n        url: axios_uri\n        })\n        .then(result => {\n            let events = [];\n            // mapping data in each event in json to \"events\" array to be displayed in eventTab\n            result.data.forEach( res => {\n              events.push({\n                id: res.id,\n                home: String(res.home), \n                homeImg: String(res.homeImg), \n                away: String(res.away), \n                awayImg: String(res.awayImg), \n                stadium: String(res.stadium),\n                location: String(res.location), \n                date: String(res.date),\n                time: String(res.time)\n              })\n                //events.push({id:String(res.eventName), description: String(res.eventDescription)});\n            })\n            this.setState({userGames: events}, () => this.displayScheduledGames() );\n        })\n        .catch(error => console.error(\"err:\", error));\n      \n    }\n\n      //api call to find available games for each region\n      getLeagueInfo = (leagueId) => {\n\n        if (leagueId===\"premier\") {leagueId=39; }\n        else if (leagueId===\"champions\") {leagueId=2; }\n        else if (leagueId===\"bundesliga\") {leagueId=78;}\n        else if (leagueId===\"serie-a\") {leagueId=135; }\n        else if (leagueId===\"la-liga\") {leagueId=140; }\n      \n      \n        //API call to get info on league clicked. will change the header on display\n        const options = {\n          method: 'GET',\n          url: 'https://api-football-v1.p.rapidapi.com/v3/leagues',\n          params: {id: leagueId},\n          headers: {\n            'X-RapidAPI-Key': 'c3997e6e90mshc57e13968b48304p10dd78jsnd81c29d9c57a',\n            'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n          }\n        };\n        let name;\n        let region;\n        let season;\n        axios.request(options).\n        then(response => {\n            let res = response.data.response[0];\n            name = res.league.name;\n            if (name===\"UEFA Champions League\") name=\"Champions League\";\n            region = res.country.name;\n            season = res.seasons.filter(season => season.current===true );\n            season=season[0];\n            season = season.start+' to '+season.end;\n\n            this.setState({displayHeaderData: {name: name, region: region, season: season} });\n        }).catch(function (error) {\n            console.error(error);\n        });\n\n        if (this.state.getter===\"by league\") this.getFixturesByLeague(leagueId);\n        else if (this.state.getter===\"by teams\"){ this.getTeamsByLeague(leagueId); console.log(\"getting teams for league id \", 2);}\n\n            \n      }\n\n      getTeamsByLeague = (leagueId) => {\n\n            //translating leagueIDs for different api version usage\n            if (leagueId===39) { leagueId=2; }\n            else if (leagueId===2) { leagueId=31; }\n            else if (leagueId===78) { leagueId=8; }\n            else if (leagueId===135) { leagueId=6; }\n            else if (leagueId===140) { leagueId=30; }\n        \n        var teamsInLeague = [];\n        var axios_uri = \"https://api-football-v1.p.rapidapi.com/v2/teams/league/\"+leagueId;\n        const options = {\n            method: 'GET',\n            url: axios_uri,\n            headers: {\n              'X-RapidAPI-Key': 'c3997e6e90mshc57e13968b48304p10dd78jsnd81c29d9c57a',\n              'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n            }\n          };\n          \n          axios.request(options).then( response => {\n            let res = response.data.api.teams;\n            teamsInLeague.push({id: \"back\", description: \"Back\"});\n            res.map(team => {\n                let obj = {};\n                obj.id = team.team_id;\n                obj.description = team.name;\n                obj.logo = team.logo;\n                obj.code = '('+team.code+')';\n                teamsInLeague.push(obj);\n            })\n            // id description\n            this.setState({tabsToDisplay: teamsInLeague});\n          })\n          .catch(function (error) {\n              console.error(error);\n          });\n      }\n\n    getFixturesByTeam = (teamId, teamName) => {\n        this.setState({\n          findFutureGames: true,\n          displayLoginStatus: false,\n          displayLogin: false,\n          displayRegistration: false\n        }); \n\n        var api_params;\n        if (this.state.findFutureGames===true) api_params = {team: teamId, season: '2022', next: '50'};\n        else  api_params=  {team: teamId, season: '2022', last: '50'};\n\n        const options = {\n            method: 'GET',\n            url: 'https://api-football-v1.p.rapidapi.com/v3/fixtures',\n            params: api_params,\n            headers: {\n              'X-RapidAPI-Key': 'c3997e6e90mshc57e13968b48304p10dd78jsnd81c29d9c57a',\n              'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n            }\n          };\n          \n          axios.request(options).then(response => {\n            var newFixture=[];\n            response.data.response.map( event => {\n                let f = {\n                    id: event.fixture.id,\n                    home: event.teams.home.name, \n                    away: event.teams.away.name, \n                    date: event.fixture.date.slice(0,10),\n                    time: event.fixture.date.slice(11,16), \n                    timezone: event.fixture.timezone, \n                    location: event.fixture.venue.city,\n                    stadium: event.fixture.venue.name,\n                    homeImg: event.teams.home.logo,\n                    awayImg: event.teams.away.logo,\n                    homeScore: event.goals.home,\n                    awayScore: event.goals.away\n                };\n           \n                newFixture.push(f);\n            })\n            this.setState({\n              rightDisplayTabs:newFixture,\n              displayHeaderData: {name: teamName, region: \"\", season: \"\"}\n            });\n\n            \n          }).catch(function (error) {\n              console.error(error);\n          });\n\n    }\n\n      getFixturesByLeague = (leagueId) => {\n        this.setState({\n          findFutureGames: true,\n          displayLoginStatus: false,\n          displayLogin: false,\n          displayRegistration: false\n        }); \n\n        var api_params;\n        if (this.state.findFutureGames===true) api_params = {league: leagueId, season: '2022', next: '50'};\n        else  api_params=  {league: leagueId, season: '2022', last: '50'};\n\n        const options = {\n            method: 'GET',\n            url: 'https://api-football-v1.p.rapidapi.com/v3/fixtures',\n            params: api_params,\n            headers: {\n              'X-RapidAPI-Key': 'c3997e6e90mshc57e13968b48304p10dd78jsnd81c29d9c57a',\n              'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n            }\n          };\n          \n          axios.request(options)\n          .then(response => {\n            var newFixture=[];\n            response.data.response.map( event => {\n\n                let f = {\n                            id: event.fixture.id,\n                            home: event.teams.home.name, \n                            away: event.teams.away.name, \n                            date: event.fixture.date.slice(0,10),\n                            time: event.fixture.date.slice(11,16), \n                            timezone: event.fixture.timezone, \n                            location: event.fixture.venue.city,\n                            stadium: event.fixture.venue.name,\n                            homeImg: event.teams.home.logo,\n                            awayImg: event.teams.away.logo,\n                            homeScore: event.goals.home,\n                            awayScore: event.goals.away\n                };\n                newFixture.push(f);\n            }   \n            );\n            this.setState({rightDisplayTabs: newFixture});\n        \n          })\n          .catch(function (error) {\n              console.error(error);\n          });\n      }\n\n      addGame = (event) => {\n        \n\n        if (this.state.isLoggedIn===false) {\n          this.displayUserNotLoggedIn();\n        }\n        else {\n          /*id\n          xhome \n          xhomeImg\n          xaway\n          xawayImg\n          xdate\n          xtime\n          timezone\n          xlocation\n          xstadium */\n            let uri =\"http://localhost:8080/api/events/new-event\"\n            axios.post(uri, {\n              id: event.id,\n              eventName: event.home+\" vs \"+event.away,\n              eventDescription:  event.time,\n\n              date: event.date,\n              time: event.time,\n              location: event.location,\n              stadium: event.stadium,\n\n              home: event.home,\n              homeImg: event.homeImg,\n              away: event.away,\n              awayImg: event.awayImg,\n\n              uid: this.state.userData.id\n            })\n            .then(response => {\n              let newUserGames = [...this.state.userGames];\n              newUserGames.push(event);\n              console.log(\"event\", event.id, \"added\");\n            })\n            .catch(error => console.log(\"error\", error))\n        }\n      }\n\n      deleteGame = (id) => {\n        console.log(\"deleting event \",id);\n\n        let axios_uri = \"http://localhost:8080/api/events/\"+String(id);\n        axios.delete(axios_uri)\n        .then(response => {\n          console.log(\"event deleted\");\n          this.getScheduledGames();\n        }\n        )\n        .catch(error => console.log(\"error\", error));\n      }\n\n      handleLoginRegistrationClick = (buttonType) => {\n        if (buttonType===\"login\") {\n          this.setState({\n            displayLogin: true,\n            displayLoginStatus: false,\n            displayHeaderData: {name: \"Login\", region: \"\", season: \"\"}\n          })\n\n        }\n        else if (buttonType===\"registration\") {\n          this.setState({\n            displayLoginStatus: false,\n            displayRegistration: true,\n            displayHeaderData: {name: \"Registration\", region: \"\", season: \"\"}\n          });\n\n        }\n        else if (buttonType===\"back\") {\n          this.setState({\n            displayLoginStatus: true,\n            displayRegistration: false,\n            displayLogin: false,\n            displayHeaderData: {name: \"\", region: \"\", season: \"\"}\n          });\n          \n        }\n      }\n\n      handleRegistrationSubmit = (userData) => {\n        console.log(\"Registering....\");\n        console.log(\"Name: \", userData.firstName, userData.lastName);\n        console.log(\"username: \", userData.username);\n        console.log(\"password: \", userData.password);\n\n        axios.post( \"http://localhost:8080/api/users\" ,\n          {\n            firstName: userData.firstName,\n            lastName: userData.lastName,\n            username: userData.username,\n            password: userData.password\n          })\n          .then(result => {\n            console.log(\"User \", userData.username,\" generated\" );   \n          })\n          .catch(error => console.error(\"err:\", error));\n      }\n\n      handleLoginSubmit = (userData) => {\n        console.log(\"logging in as\", userData.username,\"...\");\n\n         //getting all users and filtering JSON for right users\n         axios.get(\"http://localhost:8080/api/users/all-users\")\n         .then(response => {\n           let user = response.data.filter(u => u.username===userData.username && u.password===userData.password);\n           if (user.length===0) {console.log(\"log in failed\"); alert(\"login failed\");}\n           else{\n              user = user[0];\n               this.setState(\n                {userData: {firstName:user.firstName, lastName: user.lastName, username: user.username, id: user.id}, isLoggedIn: true}, \n                () => { this.loadInScheduledGames()} \n                );\n           }\n         })\n         .catch(error => console.log(\"error: \", error));\n      }\n\n\n}\n \nexport default MainBody;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}